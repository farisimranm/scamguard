{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\AML-Hackathon\\\\scamguard\\\\frontend\\\\scamguard\\\\src\\\\components\\\\ImageOcr.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createWorker } from 'tesseract.js';\n// import { automateChat } from '../services/automateChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageOcr() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [ocrData, setOcrData] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [progress, setProgress] = useState(0);\n  const ocr = async () => {\n    const worker = await createWorker({\n      logger: m => {\n        console.log(\"[OCR] '\" + selectedImage.name + \"' : \", m[\"progress\"] * 100 + \"%\");\n        setProgress(m[\"progress\"]);\n      }\n    });\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const {\n      data\n    } = await worker.recognize(selectedImage);\n    setOcrData(data);\n    console.log(data.text);\n    await worker.terminate();\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    setSelectedImage(file);\n    setImageUrl(URL.createObjectURL(file));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    ocr();\n    // automateChat(ocrData.text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageInput\",\n          children: \"Upload your screenshot image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"imageInput\",\n          onChange: handleImageUpload,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Check for scam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Your Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              height: \"500px\",\n              alt: \"Uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), progress > 0 && progress < 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: `Reading text: ${Math.round(progress * 100)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), ocrData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Detected Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: ocrData.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageOcr, \"zCvn5uisPc4q962FYlkoq9J0PGw=\");\n_c = ImageOcr;\nexport default ImageOcr;\nvar _c;\n$RefreshReg$(_c, \"ImageOcr\");","map":{"version":3,"names":["React","useState","createWorker","jsxDEV","_jsxDEV","ImageOcr","_s","selectedImage","setSelectedImage","ocrData","setOcrData","imageUrl","setImageUrl","progress","setProgress","ocr","worker","logger","m","console","log","name","loadLanguage","initialize","data","recognize","text","terminate","handleImageUpload","e","file","target","files","URL","createObjectURL","handleSubmit","preventDefault","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","src","height","alt","Math","round","_c","$RefreshReg$"],"sources":["D:/Projects/AML-Hackathon/scamguard/frontend/scamguard/src/components/ImageOcr.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createWorker } from 'tesseract.js';\r\n// import { automateChat } from '../services/automateChat';\r\n\r\nfunction ImageOcr() {\r\n  const [ selectedImage, setSelectedImage ] = useState(null);\r\n  const [ ocrData, setOcrData ] = useState('');\r\n  const [ imageUrl, setImageUrl ] = useState('');\r\n  const [ progress, setProgress] = useState(0);\r\n\r\n  const ocr = async () => {\r\n    const worker = await createWorker({\r\n      logger: m => {\r\n        console.log(\"[OCR] '\" + selectedImage.name + \"' : \", m[\"progress\"] * 100 + \"%\");\r\n        setProgress(m[\"progress\"]);\r\n      }\r\n    });\r\n    await worker.loadLanguage('eng');\r\n    await worker.initialize('eng');\r\n    const { data } = await worker.recognize(selectedImage);\r\n    setOcrData(data);\r\n    console.log(data.text);\r\n    await worker.terminate();\r\n  };\r\n  \r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedImage(file);\r\n    setImageUrl(URL.createObjectURL(file));\r\n  }\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    ocr();\r\n    // automateChat(ocrData.text);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"imageInput\">Upload your screenshot image:</label>\r\n                <input type=\"file\" id=\"imageInput\" onChange={handleImageUpload} required />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Check for scam</button>\r\n            </div>\r\n        </form>\r\n        <div>\r\n            {\r\n            <div>\r\n                <div>\r\n                {\r\n                    imageUrl &&\r\n                    <div>\r\n                        <div>Your Image</div>\r\n                        <img src={imageUrl} height='500px' alt=\"Uploaded\" />\r\n                    </div>\r\n                }\r\n                {\r\n                    progress > 0 && progress < 1 ? (\r\n                    <div>\r\n                        {`Reading text: ${Math.round(progress * 100)}%`}\r\n                    </div>\r\n                    ) : (\r\n                    <div></div>\r\n                    )\r\n                }\r\n                </div>\r\n            </div>\r\n            }\r\n            {\r\n            ocrData ? (\r\n                <div>\r\n                <div>Detected Text</div>\r\n                <div>{ocrData.text}</div>\r\n                </div>\r\n            ) : ''\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageOcr;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}